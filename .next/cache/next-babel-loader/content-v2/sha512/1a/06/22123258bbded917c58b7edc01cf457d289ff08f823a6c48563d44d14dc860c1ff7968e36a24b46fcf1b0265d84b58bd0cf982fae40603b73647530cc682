{"ast":null,"code":"import { MongoClient, Db } from 'mongodb';\nimport url from 'url';\nlet cachedDb = null;\n\nasync function connectToDatabase(uri) {\n  if (cachedDb = Db) {\n    return cachedDb;\n  }\n\n  const client = await MongoClient.connect(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  const dbName = url.parse(uri).pathname.substr(1);\n  const db = client.db(dbName);\n  cachedDb = db;\n  return db;\n}\n\nexport default (async (request, response) => {\n  const {\n    email\n  } = request.body;\n  const db = await connectToDatabase(process.env.MONGODB_URI);\n  const collection = db.collection('subscribers');\n  await collection.insertOne({\n    email,\n    subscribedAt: new Date()\n  });\n  return response.status(201).json({\n    ok: true\n  });\n});","map":{"version":3,"sources":["/home/dalmi/meus_projetos/nextvercel/pages/api/db.js"],"names":["MongoClient","Db","url","cachedDb","connectToDatabase","uri","client","connect","useNewUrlParser","useUnifiedTopology","dbName","parse","pathname","substr","db","request","response","email","body","process","env","MONGODB_URI","collection","insertOne","subscribedAt","Date","status","json","ok"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,EAAtB,QAAgC,SAAhC;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,IAAIC,QAAQ,GAAG,IAAf;;AAEA,eAAeC,iBAAf,CAAiCC,GAAjC,EAAsC;AACpC,MAAIF,QAAQ,GAAGF,EAAf,EAAmB;AACjB,WAAOE,QAAP;AACD;;AAED,QAAMG,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoBF,GAApB,EAAyB;AAC5CG,IAAAA,eAAe,EAAE,IAD2B;AAE5CC,IAAAA,kBAAkB,EAAE;AAFwB,GAAzB,CAArB;AAKA,QAAMC,MAAM,GAAGR,GAAG,CAACS,KAAJ,CAAUN,GAAV,EAAeO,QAAf,CAAwBC,MAAxB,CAA+B,CAA/B,CAAf;AAEA,QAAMC,EAAE,GAAGR,MAAM,CAACQ,EAAP,CAAUJ,MAAV,CAAX;AAEAP,EAAAA,QAAQ,GAAGW,EAAX;AAEA,SAAOA,EAAP;AACD;;AAED,gBAAe,OAAOC,OAAP,EAAgBC,QAAhB,KAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAYF,OAAO,CAACG,IAA1B;AAEA,QAAMJ,EAAE,GAAG,MAAMV,iBAAiB,CAACe,OAAO,CAACC,GAAR,CAAYC,WAAb,CAAlC;AAEA,QAAMC,UAAU,GAAGR,EAAE,CAACQ,UAAH,CAAc,aAAd,CAAnB;AAEA,QAAMA,UAAU,CAACC,SAAX,CAAqB;AACzBN,IAAAA,KADyB;AAEzBO,IAAAA,YAAY,EAAE,IAAIC,IAAJ;AAFW,GAArB,CAAN;AAKA,SAAOT,QAAQ,CAACU,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAA1B,CAAP;AACD,CAbD","sourcesContent":["import { MongoClient, Db } from 'mongodb'\nimport url from 'url';\n\nlet cachedDb = null;\n\nasync function connectToDatabase(uri) {\n  if (cachedDb = Db) {\n    return cachedDb;\n  }\n\n  const client = await MongoClient.connect(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  });\n\n  const dbName = url.parse(uri).pathname.substr(1);\n\n  const db = client.db(dbName);\n\n  cachedDb = db;\n\n  return db;\n}\n\nexport default async (request, response) => {\n  const { email } = request.body;\n  \n  const db = await connectToDatabase(process.env.MONGODB_URI);\n\n  const collection = db.collection('subscribers');\n\n  await collection.insertOne({\n    email,\n    subscribedAt: new Date(),\n  })\n\n  return response.status(201).json({ ok: true });\n}\n"]},"metadata":{},"sourceType":"module"}